import { useEffect, useState } from "react";
import DataTable, { defaultThemes } from 'react-data-table-component';
import { MainAPI } from "../api/MainAPI";
import { CustomModal } from "./Modal";
import Checkbox from 'rc-checkbox';

import { AiOutlineFileExcel, AiOutlinePlus, AiOutlineTable } from 'react-icons/ai';

const customStyles = {
    table: {
        style: {
            minHeight: "80vh",
        }
    },
    headRow: {
        style: {
            borderTopStyle: 'solid',
            borderTopWidth: '1px',
            borderTopColor: defaultThemes.default.divider.default,
        },
    },
    headCells: {
        style: {
            '&:not(:last-of-type)': {
                borderRightStyle: 'solid',
                borderRightWidth: '1px',
                borderRightColor: defaultThemes.default.divider.default,
            },
        },
    },
    cells: {
        style: {
            '&:not(:last-of-type)': {
                borderRightStyle: 'solid',
                borderRightWidth: '1px',
                borderRightColor: defaultThemes.default.divider.default,
            },
        },
    },
};

const paginationPerPage = 10;

const init = {
    "N": "",
    "–ö–ª–∏–µ–Ω—Ç": "",
    "–ú–∞—Ä–∫–∞": "",
    "–ú–æ–¥–µ–ª—å": "",
    "–ù–∞–¥—Å—Ç—Ä–æ–π–∫–∞": "",
    "–ü—Ä–æ_–≤–æ": "",
    "ID": "",
    "VIN": "",
    "VIN_KZ": "",
    "–°—Ç–∞—Ç—É—Å_–û–ü": "",
    "–°—Ç–∞—Ç—É—Å_–¥–≤–∏–∂–µ–Ω–∏–µ": "",
    "–°—Ç–∞—Ç—É—Å_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ": "",
    "–°—Ç–∞—Ç—É—Å_–û–ü_–î–≤–∏–∂": "",
    "–°—Ç–∞—Ç—É—Å_–û–ü_–ü—Ä–æ–∏–∑–æ–¥—Å—Ç–≤–æ": "",
    "–û–±–Ω–æ–≤–∏—Ç—å_–°—Ç–∞—Ç—É—Å": "",
    "–†–µ–º–æ–Ω—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ": "",
    "–•—Ä–∞–Ω–µ–Ω–∏–µ_–û–ü": "",
    "–°—Ç–æ–∏–º–æ—Å—Ç—å_–ø–æ_–ø—Ä–∞–π—Å—É": 0,
    "–°–∫–∏–¥–∫–∞_–î–∏–ª–µ—Ä–∞": 0,
    "–°–∫–∏–¥–∫–∞_–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä–∞": 0,
    "–ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–ø—Ä–æ—Ü–µ–Ω—Ç": 0,
    "–ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–¥–æ–ª–ª–∞—Ä": 0,
    "–§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ": "",
    "–°—Ç–æ–∏–º–æ—Å—Ç—å_–∑–∞_–µ–¥_–ø–æ_–∫–æ–Ω—Ç—Ä–∞–∫—Ç—É": 0,
    "–î–∞—Ç–∞_–î–ö–ü": "2023-09-28T13:45:27.222Z",
    "–û–ø–ª–∞—Ç–∞_–ø–æ_–î–ö–ü": "",
    "–û—Å—Ç–∞—Ç–æ–∫_–ø–æ_–æ–ø–ª–∞—Ç–µ": 0,
    "–°—Ä–æ–∫_–æ–ø–ª–∞—Ç—ã": "2023-09-28T13:45:27.222Z",
    "–°—Ä–æ–∫_–ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏": "2023-09-28T13:45:27.222Z",
    "–û—Å—Ç–∞–ª–æ—Å—å_–¥–Ω–µ–π": 0,
    "–î–∞—Ç–∞_—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏": "2023-09-28T13:45:27.222Z",
    "–ö–≤–æ—Ç–∞": "",
    "–°—Ç–∞—Ç—É—Å_–∫–≤–æ—Ç—ã": "",
    "–ü—Ä–æ–¥–∞–∂–∞_–æ—Ç_–ù–¢–ê_–ù–°–¢–ö": "",
    "–î–∞—Ç–∞_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": "2023-09-28T13:45:27.222Z",
    "–°—Ä–æ–∫_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è": 0,
    "–û—Å—Ç–∞–ª–æ—Å—å_–î–Ω–µ–π_–≤_–∫–≤–æ—Ç–µ": 0,
    "–ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ": "",
    "–ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è": "",
    "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ_–ù–°–¢–ö": "",
    "CT_KZ": "",
    "–£—Ç–∏–ª—å_—Å–±–æ—Ä": "",
    "–î–∞—Ç–∞_—Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π_–æ—á–∏—Å—Ç–∫–∏": "2023-09-28T13:45:27.222Z",
    "–û–ø–ª–∞—Ç–∞_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é": "",
    "–î–∞—Ç–∞_–æ–ø–ª–∞—Ç—ã_–ø—Ä–æ–∏–∑–≤": "2023-09-28T13:45:27.222Z",
    "–£—Å–ª–æ–≤–∏–µ_–æ–ø–ª–∞—Ç—ã_–ø—Ä–∏–∑–≤": "",
    "–°—Ä–æ–∫_–∑–∞–º–æ—Ä–æ–∑–∫–∏_–î–°": "2023-09-28T13:45:27.222Z",
    "–ù–æ–º–µ—Ä_–ø–∞—Ä—Ç–∏–∏": "",
    "–ù–æ–º–µ—Ä_–î–¢_–ò–ú77": ""
}

const TableScreen = () => {
    const [skip, setSkip] = useState(1);
    const [totalPage, setTotalPage] = useState(1);
    const [tableData, setTableData] = useState([]);
    const [tableCols, setTableCols] = useState([]);

    const [filtredTableCols, setFiltredTableCols] = useState([]);

    const [selected, setSelected] = useState([]);

    const [show, setShow] = useState(false);
    const [showAdd, setShowAdd] = useState(false);

    const [dataAdd, setDataAdd] = useState(init);

    const handleData = (obj) => {
        setDataAdd({ ...dataAdd, ...obj })
    }

    const handleModal = () => {
        setShow(!show)
    }

    const handleAddModal = () => {
        setShowAdd(!showAdd);
        setDataAdd(init);
    }


    useEffect(() => {
        MainAPI.getItems(((skip - 1) * paginationPerPage), paginationPerPage).then(res => {
            const items = res?.items ?? [];

            const resultArray = [];

            if (items.length > 0) {
                for (const key in items[0]) {
                    if (Object.hasOwnProperty.call(items[0], key)) {
                        resultArray.push({
                            name: key,
                            selector: row => row[key],
                            sortable: true,
                        });

                    }
                }

                if (tableCols.length > 0) {
                    setFiltredTableCols(resultArray.filter(r => selected.includes(r.name)));
                } else {
                    setTableCols(resultArray);
                    setFiltredTableCols(resultArray);
                }

                setTableData(items);

                const total_count = Math.ceil((res?.total_count ?? 0) / paginationPerPage);
                setTotalPage(total_count);
            }
        })
    }, [skip, selected]);

    useEffect(() => {
        if (selected.length === 0) {
            setSelected(tableCols.map(r => r?.name))
        }
    }, [tableCols])

    const handleChenge = (id) => {
        if (selected.includes(id)) {
            setSelected(selected.filter(sel => sel !== id))
        } else {
            setSelected([...selected, id])
        }
    }

    const hendleReset = () => {
        setFiltredTableCols(tableCols);
        setSelected(tableCols.map(r => r?.name))
        handleModal();
    }

    const handleAdd = () => {
        MainAPI.SetItem(dataAdd).then(res => {
            console.log("üöÄ ~ file: TableComponent.jsx:182 ~ MainAPI.SetItem ~ res:", res)
        })
    }

    const hendleExport = () => {
        MainAPI.Export().then(response => {
            const url = window.URL.createObjectURL(new Blob([response.data]));
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = 'items.xlsx'; // –£–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
        })
    }

    return (
        <>
            <div className="screen-wrapper">
                <div className="table-wrapper">

                    <div className="table_header">
                        <h1>STOCK LIST "HYUNDAI"</h1>
                        <h3>–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: 100103-09-107 13:37:07</h3>
                    </div>

                    <DataTable
                        columns={filtredTableCols}
                        data={tableData}
                        customStyles={customStyles}

                        pagination
                        paginationServer
                        paginationPerPage={paginationPerPage}
                        paginationTotalRows={totalPage * paginationPerPage}
                        onChangePage={(p, t) => { setSkip(p) }}
                        paginationComponentOptions={{ noRowsPerPage: true }}
                        fixedHeader
                        fixedHeaderScrollHeight="75vh"
                    />
                </div>
            </div>
            <CustomModal show={show} setShow={setShow} onClick={hendleReset} title="–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é">
                {
                    (tableCols ?? []).map((col, index) => {
                        return (
                            <label key={`checkbox-${col?.name}-${index}`}>
                                <Checkbox
                                    value={col?.name}
                                    className="my-checkbox"
                                    defaultChecked={selected.includes(col?.name ?? "")}
                                    onChange={(e) => handleChenge(e.target.value)}
                                />
                                &nbsp; {col?.name}
                            </label>
                        )
                    })
                }

            </CustomModal>

            <CustomModal show={showAdd} setShow={setShowAdd} onClick={() => handleAdd()} title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å">
                <label>
                    N &nbsp;
                    <input value={dataAdd.N} onChange={(e) => handleData({ N: e.target.value })} type="text" />
                </label>
                <label>
                    –ö–ª–∏–µ–Ω—Ç &nbsp;
                    <input value={dataAdd.–ö–ª–∏–µ–Ω—Ç} onChange={(e) => handleData({ –ö–ª–∏–µ–Ω—Ç: e.target.value })} type="text" />
                </label>
                <label>
                    –ú–∞—Ä–∫–∞ &nbsp;
                    <input value={dataAdd.–ú–∞—Ä–∫–∞} onChange={(e) => handleData({ –ú–∞—Ä–∫–∞: e.target.value })} type="text" />
                </label>
                <label>
                    –ú–æ–¥–µ–ª—å &nbsp;
                    <input value={dataAdd.–ú–æ–¥–µ–ª—å} onChange={(e) => handleData({ –ú–æ–¥–µ–ª—å: e.target.value })} type="text" />
                </label>
                <label>
                    –ù–∞–¥—Å—Ç—Ä–æ–π–∫–∞ &nbsp;
                    <input value={dataAdd.–ù–∞–¥—Å—Ç—Ä–æ–π–∫–∞} onChange={(e) => handleData({ –ù–∞–¥—Å—Ç—Ä–æ–π–∫–∞: e.target.value })} type="text" />
                </label>
                <label>
                    –ü—Ä–æ_–≤–æ &nbsp;
                    <input value={dataAdd.–ü—Ä–æ_–≤–æ} onChange={(e) => handleData({ –ü—Ä–æ_–≤–æ: e.target.value })} type="text" />
                </label>
                <label>
                    ID &nbsp;
                    <input value={dataAdd.ID} onChange={(e) => handleData({ ID: e.target.value })} type="text" />
                </label>
                <label>
                    VIN &nbsp;
                    <input value={dataAdd.VIN} onChange={(e) => handleData({ VIN: e.target.value })} type="text" />
                </label>
                <label>
                    VIN_KZ &nbsp;
                    <input value={dataAdd.VIN_KZ} onChange={(e) => handleData({ VIN_KZ: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–∞—Ç—É—Å_–û–ü &nbsp;
                    <input value={dataAdd.–°—Ç–∞—Ç—É—Å_–û–ü} onChange={(e) => handleData({ –°—Ç–∞—Ç—É—Å_–û–ü: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–∞—Ç—É—Å_–¥–≤–∏–∂–µ–Ω–∏–µ &nbsp;
                    <input value={dataAdd.–°—Ç–∞—Ç—É—Å_–¥–≤–∏–∂–µ–Ω–∏–µ} onChange={(e) => handleData({ –°—Ç–∞—Ç—É—Å_–¥–≤–∏–∂–µ–Ω–∏–µ: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–∞—Ç—É—Å_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ &nbsp;
                    <input value={dataAdd.–°—Ç–∞—Ç—É—Å_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ} onChange={(e) => handleData({ –°—Ç–∞—Ç—É—Å_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–∞—Ç—É—Å_–û–ü_–î–≤–∏–∂ &nbsp;
                    <input value={dataAdd.–°—Ç–∞—Ç—É—Å_–û–ü_–î–≤–∏–∂} onChange={(e) => handleData({ –°—Ç–∞—Ç—É—Å_–û–ü_–î–≤–∏–∂: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–∞—Ç—É—Å_–û–ü_–ü—Ä–æ–∏–∑–æ–¥—Å—Ç–≤–æ &nbsp;
                    <input value={dataAdd.–°—Ç–∞—Ç—É—Å_–û–ü_–ü—Ä–æ–∏–∑–æ–¥—Å—Ç–≤–æ} onChange={(e) => handleData({ –°—Ç–∞—Ç—É—Å_–û–ü_–ü—Ä–æ–∏–∑–æ–¥—Å—Ç–≤–æ: e.target.value })} type="text" />
                </label>
                <label>
                    –û–±–Ω–æ–≤–∏—Ç—å_–°—Ç–∞—Ç—É—Å &nbsp;
                    <input value={dataAdd.–û–±–Ω–æ–≤–∏—Ç—å_–°—Ç–∞—Ç—É—Å} onChange={(e) => handleData({ –û–±–Ω–æ–≤–∏—Ç—å_–°—Ç–∞—Ç—É—Å: e.target.value })} type="text" />
                </label>
                <label>
                    –†–µ–º–æ–Ω—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ &nbsp;
                    <input value={dataAdd.–†–µ–º–æ–Ω—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ} onChange={(e) => handleData({ –†–µ–º–æ–Ω—Ç_–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: e.target.value })} type="text" />
                </label>
                <label>
                    –•—Ä–∞–Ω–µ–Ω–∏–µ_–û–ü &nbsp;
                    <input value={dataAdd.–•—Ä–∞–Ω–µ–Ω–∏–µ_–û–ü} onChange={(e) => handleData({ –•—Ä–∞–Ω–µ–Ω–∏–µ_–û–ü: e.target.value })} type="number" />
                </label>
                <label>
                    –°—Ç–æ–∏–º–æ—Å—Ç—å_–ø–æ_–ø—Ä–∞–π—Å—É &nbsp;
                    <input value={dataAdd.–°—Ç–æ–∏–º–æ—Å—Ç—å_–ø–æ_–ø—Ä–∞–π—Å—É} onChange={(e) => handleData({ –°—Ç–æ–∏–º–æ—Å—Ç—å_–ø–æ_–ø—Ä–∞–π—Å—É: e.target.value })} type="number" />
                </label>
                <label>
                    –°–∫–∏–¥–∫–∞_–î–∏–ª–µ—Ä–∞ &nbsp;
                    <input value={dataAdd.–°–∫–∏–¥–∫–∞_–î–∏–ª–µ—Ä–∞} onChange={(e) => handleData({ –°–∫–∏–¥–∫–∞_–î–∏–ª–µ—Ä–∞: e.target.value })} type="number" />
                </label>
                <label>
                    –°–∫–∏–¥–∫–∞_–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä–∞ &nbsp;
                    <input value={dataAdd.–°–∫–∏–¥–∫–∞_–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä–∞} onChange={(e) => handleData({ –°–∫–∏–¥–∫–∞_–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä–∞: e.target.value })} type="number" />
                </label>
                <label>
                    –ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–ø—Ä–æ—Ü–µ–Ω—Ç &nbsp;
                    <input value={dataAdd.–ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–ø—Ä–æ—Ü–µ–Ω—Ç} onChange={(e) => handleData({ –ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–ø—Ä–æ—Ü–µ–Ω—Ç: e.target.value })} type="number" />
                </label>
                <label>
                    –ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–¥–æ–ª–ª–∞—Ä &nbsp;
                    <input value={dataAdd.–ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–¥–æ–ª–ª–∞—Ä} onChange={(e) => handleData({ –ú–∞—Ä–∂–∞_–î–∏–ª–µ—Ä–∞_–¥–æ–ª–ª–∞—Ä: e.target.value })} type="number" />
                </label>
                <label>
                    –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ &nbsp;
                    <input value={dataAdd.–§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ} onChange={(e) => handleData({ –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–æ–∏–º–æ—Å—Ç—å_–∑–∞_–µ–¥_–ø–æ_–∫–æ–Ω—Ç—Ä–∞–∫—Ç—É &nbsp;
                    <input value={dataAdd.–°—Ç–æ–∏–º–æ—Å—Ç—å_–∑–∞_–µ–¥_–ø–æ_–∫–æ–Ω—Ç—Ä–∞–∫—Ç—É} onChange={(e) => handleData({ –°—Ç–æ–∏–º–æ—Å—Ç—å_–∑–∞_–µ–¥_–ø–æ_–∫–æ–Ω—Ç—Ä–∞–∫—Ç—É: e.target.value })} type="number" />
                </label>
                <label>
                    –î–∞—Ç–∞_–î–ö–ü &nbsp;
                    <input value={dataAdd.–î–∞—Ç–∞_–î–ö–ü} onChange={(e) => handleData({ –î–∞—Ç–∞_–î–ö–ü: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –û–ø–ª–∞—Ç–∞_–ø–æ_–î–ö–ü &nbsp;
                    <input value={dataAdd.–û–ø–ª–∞—Ç–∞_–ø–æ_–î–ö–ü} onChange={(e) => handleData({ –û–ø–ª–∞—Ç–∞_–ø–æ_–î–ö–ü: e.target.value })} type="text" />
                </label>
                <label>
                    –û—Å—Ç–∞—Ç–æ–∫_–ø–æ_–æ–ø–ª–∞—Ç–µ &nbsp;
                    <input value={dataAdd.–û—Å—Ç–∞—Ç–æ–∫_–ø–æ_–æ–ø–ª–∞—Ç–µ} onChange={(e) => handleData({ –û—Å—Ç–∞—Ç–æ–∫_–ø–æ_–æ–ø–ª–∞—Ç–µ: e.target.value })} type="number" />
                </label>
                <label>
                    –°—Ä–æ–∫_–æ–ø–ª–∞—Ç—ã &nbsp;
                    <input value={dataAdd.–°—Ä–æ–∫_–æ–ø–ª–∞—Ç—ã} onChange={(e) => handleData({ –°—Ä–æ–∫_–æ–ø–ª–∞—Ç—ã: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –°—Ä–æ–∫_–ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ &nbsp;
                    <input value={dataAdd.–°—Ä–æ–∫_–ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏} onChange={(e) => handleData({ –°—Ä–æ–∫_–ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –û—Å—Ç–∞–ª–æ—Å—å_–¥–Ω–µ–π &nbsp;
                    <input value={dataAdd.–û—Å—Ç–∞–ª–æ—Å—å_–¥–Ω–µ–π} onChange={(e) => handleData({ –û—Å—Ç–∞–ª–æ—Å—å_–¥–Ω–µ–π: e.target.value })} type="number" />
                </label>
                <label>
                    –î–∞—Ç–∞_—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ &nbsp;
                    <input value={dataAdd.–î–∞—Ç–∞_—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏} onChange={(e) => handleData({ –î–∞—Ç–∞_—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –ö–≤–æ—Ç–∞ &nbsp;
                    <input value={dataAdd.–ö–≤–æ—Ç–∞} onChange={(e) => handleData({ –ö–≤–æ—Ç–∞: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ç–∞—Ç—É—Å_–∫–≤–æ—Ç—ã &nbsp;
                    <input value={dataAdd.–°—Ç–∞—Ç—É—Å_–∫–≤–æ—Ç—ã} onChange={(e) => handleData({ –°—Ç–∞—Ç—É—Å_–∫–≤–æ—Ç—ã: e.target.value })} type="text" />
                </label>
                <label>
                    –ü—Ä–æ–¥–∞–∂–∞_–æ—Ç_–ù–¢–ê_–ù–°–¢–ö &nbsp;
                    <input value={dataAdd.–ü—Ä–æ–¥–∞–∂–∞_–æ—Ç_–ù–¢–ê_–ù–°–¢–ö} onChange={(e) => handleData({ –ü—Ä–æ–¥–∞–∂–∞_–æ—Ç_–ù–¢–ê_–ù–°–¢–ö: e.target.value })} type="text" />
                </label>
                <label>
                    –î–∞—Ç–∞_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è &nbsp;
                    <input value={dataAdd.–î–∞—Ç–∞_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è} onChange={(e) => handleData({ –î–∞—Ç–∞_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –°—Ä–æ–∫_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è &nbsp;
                    <input value={dataAdd.–°—Ä–æ–∫_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è} onChange={(e) => handleData({ –°—Ä–æ–∫_–∫–≤–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: e.target.value })} type="number" />
                </label>
                <label>
                    –û—Å—Ç–∞–ª–æ—Å—å_–î–Ω–µ–π_–≤_–∫–≤–æ—Ç–µ &nbsp;
                    <input value={dataAdd.–û—Å—Ç–∞–ª–æ—Å—å_–î–Ω–µ–π_–≤_–∫–≤–æ—Ç–µ} onChange={(e) => handleData({ –û—Å—Ç–∞–ª–æ—Å—å_–î–Ω–µ–π_–≤_–∫–≤–æ—Ç–µ: e.target.value })} type="number" />
                </label>
                <label>
                    –ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ &nbsp;
                    <input value={dataAdd.–ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ} onChange={(e) => handleData({ –ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: e.target.value })} type="text" />
                </label>
                <label>
                    –ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è &nbsp;
                    <input value={dataAdd.–ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è} onChange={(e) => handleData({ –ü—Ä–∏–º–µ—á–∞–Ω–∏—è_–ù–¢–ê_–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è: e.target.value })} type="text" />
                </label>
                <label>
                    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ_–ù–°–¢–ö &nbsp;
                    <input value={dataAdd.–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ_–ù–°–¢–ö} onChange={(e) => handleData({ –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ_–ù–°–¢–ö: e.target.value })} type="text" />
                </label>
                <label>
                    CT_KZ &nbsp;
                    <input value={dataAdd.CT_KZ} onChange={(e) => handleData({ CT_KZ: e.target.value })} type="text" />
                </label>
                <label>
                    –£—Ç–∏–ª—å_—Å–±–æ—Ä &nbsp;
                    <input value={dataAdd.–£—Ç–∏–ª—å_—Å–±–æ—Ä} onChange={(e) => handleData({ –£—Ç–∏–ª—å_—Å–±–æ—Ä: e.target.value })} type="text" />
                </label>
                <label>
                    –î–∞—Ç–∞_—Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π_–æ—á–∏—Å—Ç–∫–∏ &nbsp;
                    <input value={dataAdd.–î–∞—Ç–∞_—Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π_–æ—á–∏—Å—Ç–∫–∏} onChange={(e) => handleData({ –î–∞—Ç–∞_—Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π_–æ—á–∏—Å—Ç–∫–∏: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –û–ø–ª–∞—Ç–∞_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é &nbsp;
                    <input value={dataAdd.–û–ø–ª–∞—Ç–∞_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é} onChange={(e) => handleData({ –û–ø–ª–∞—Ç–∞_–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é: e.target.value })} type="text" />
                </label>
                <label>
                    –î–∞—Ç–∞_–æ–ø–ª–∞—Ç—ã_–ø—Ä–æ–∏–∑–≤ &nbsp;
                    <input value={dataAdd.–î–∞—Ç–∞_–æ–ø–ª–∞—Ç—ã_–ø—Ä–æ–∏–∑–≤} onChange={(e) => handleData({ –î–∞—Ç–∞_–æ–ø–ª–∞—Ç—ã_–ø—Ä–æ–∏–∑–≤: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –£—Å–ª–æ–≤–∏–µ_–æ–ø–ª–∞—Ç—ã_–ø—Ä–∏–∑–≤ &nbsp;
                    <input value={dataAdd.–£—Å–ª–æ–≤–∏–µ_–æ–ø–ª–∞—Ç—ã_–ø—Ä–∏–∑–≤} onChange={(e) => handleData({ –£—Å–ª–æ–≤–∏–µ_–æ–ø–ª–∞—Ç—ã_–ø—Ä–∏–∑–≤: e.target.value })} type="text" />
                </label>
                <label>
                    –°—Ä–æ–∫_–∑–∞–º–æ—Ä–æ–∑–∫–∏_–î–° &nbsp;
                    <input value={dataAdd.–°—Ä–æ–∫_–∑–∞–º–æ—Ä–æ–∑–∫–∏_–î–°} onChange={(e) => handleData({ –°—Ä–æ–∫_–∑–∞–º–æ—Ä–æ–∑–∫–∏_–î–°: e.target.value })} type="datetime-local" />
                </label>
                <label>
                    –ù–æ–º–µ—Ä_–ø–∞—Ä—Ç–∏–∏ &nbsp;
                    <input value={dataAdd.–ù–æ–º–µ—Ä_–ø–∞—Ä—Ç–∏–∏} onChange={(e) => handleData({ –ù–æ–º–µ—Ä_–ø–∞—Ä—Ç–∏–∏: e.target.value })} type="text" />
                </label>
                <label>
                    –ù–æ–º–µ—Ä_–î–¢_–ò–ú77 &nbsp;
                    <input value={dataAdd.–ù–æ–º–µ—Ä_–î–¢_–ò–ú77} onChange={(e) => handleData({ –ù–æ–º–µ—Ä_–î–¢_–ò–ú77: e.target.value })} type="text" />
                </label>
            </CustomModal>

            <div className="btn_management_wrapp">
                <div onClick={() => handleModal()} className="btn_management">
                    <AiOutlineTable size={40} />
                </div>
                <div onClick={() => handleAddModal()} className="btn_management">
                    <AiOutlinePlus size={40} />
                </div>
                <div onClick={() => hendleExport()} className="btn_management">
                    <AiOutlineFileExcel size={40} />
                </div>
            </div>
        </>
    )
}

export default TableScreen;